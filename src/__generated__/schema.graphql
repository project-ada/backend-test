schema {
  query: Query
  mutation: Mutation
}
type Car {
  id: ID!
  model: String!
  type: String!
  colour: String!
}
"""float rounded to 1 decimal place"""
scalar FloatRounded1
"""float rounded to 2 decimal places"""
scalar FloatRounded2
type Incident {
  id: ID!
  carID: String!
  severity: Int!
  date: UTCDate!
}
"""Date in UTC, expected to be used as a js Date in the UI (as normal Dayjs in the server)"""
scalar JSDate
type Mutation {
  """returns the given value"""
  mutantPing(value: String!): String!
}
type Query {
  """Returns all the cars in the system"""
  cars: [Car!]!
  """Returns all the incidents in the system"""
  incidents: [Incident!]!
  """WARM-UP TEST: returns an array of random sentences of the given quantity (TO BE IMPLEMENTED)"""
  messageList(quantity: Int!): [String!]!
  """returns current time"""
  now: UTCDate!
  """returns ok"""
  ping: String!
}
"""Date in UTC"""
scalar UTCDate
"""Date in UTC that when parsing, if it does not have time already, it will be parsed at end of UTC day"""
scalar UTCEndOfDay
"""Date in UTC that when parsing, if it does not have time already, it will be parsed at start of UTC day"""
scalar UTCStartOfDay